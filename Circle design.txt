CSS

position: absolute;
width: 297.98px;
height: 260.94px;
left: 253px;
top: 589px;

filter: drop-shadow(8px 8px 8px rgba(0, 0, 0, 0.25));

iOS


var view = UILabel()

view.frame = CGRect(x: 0, y: 0, width: 297.98, height: 260.94)

view.backgroundColor = .white


var shadows = UIView()

shadows.frame = view.frame

shadows.clipsToBounds = false

view.addSubview(shadows)


let shadowPath0 = UIBezierPath(roundedRect: shadows.bounds, cornerRadius: 0)

let layer0 = CALayer()

layer0.shadowPath = shadowPath0.cgPath

layer0.shadowColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.25).cgColor

layer0.shadowOpacity = 1

layer0.shadowRadius = 8

layer0.shadowOffset = CGSize(width: 8, height: 8)

layer0.bounds = shadows.bounds

layer0.position = shadows.center

shadows.layer.addSublayer(layer0)


view.layer.backgroundColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0).cgColor


var parent = self.view!

parent.addSubview(view)

view.translatesAutoresizingMaskIntoConstraints = false

view.widthAnchor.constraint(equalToConstant: 297.98).isActive = true

view.heightAnchor.constraint(equalToConstant: 260.94).isActive = true

view.leadingAnchor.constraint(equalTo: parent.leadingAnchor, constant: 253).isActive = true

view.topAnchor.constraint(equalTo: parent.topAnchor, constant: 589).isActive = true



Android


<!-- 26 -->
<View
android:id="@+id/some_id"
android:layout_width="297.98dp"
android:layout_height="260.94dp"
android:layout_alignParentLeft="true"
android:layout_marginLeft="253dp"
android:layout_alignParentTop="true"
android:layout_marginTop="565dp"
android:background="#00000000"
android:elevation="8dp"
 />
